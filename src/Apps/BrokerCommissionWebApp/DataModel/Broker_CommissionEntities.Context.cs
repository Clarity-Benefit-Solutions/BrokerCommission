//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BrokerCommissionWebApp.DataModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Broker_CommissionEntities : DbContext
    {
        public Broker_CommissionEntities()
            : base("name=Broker_CommissionEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BROKER_COMMISSION> BROKER_COMMISSION { get; set; }
        public virtual DbSet<BROKER_MASTER> BROKER_MASTER { get; set; }
        public virtual DbSet<BROKER_MASTER_> BROKER_MASTER_ { get; set; }
        public virtual DbSet<CLIENT> CLIENTs { get; set; }
        public virtual DbSet<CLIENT_> CLIENT_ { get; set; }
        public virtual DbSet<db_error_log> db_error_log { get; set; }
        public virtual DbSet<db_message_log> db_message_log { get; set; }
        public virtual DbSet<Detail_Input> Detail_Input { get; set; }
        public virtual DbSet<Error_Msg> Error_Msg { get; set; }
        public virtual DbSet<FEE_MEMO> FEE_MEMO { get; set; }
        public virtual DbSet<Import_Archive> Import_Archive { get; set; }
        public virtual DbSet<Import_OCT> Import_OCT { get; set; }
        public virtual DbSet<SENT_INVOICE> SENT_INVOICE { get; set; }
        public virtual DbSet<STATEMENT_DETAILS> STATEMENT_DETAILS { get; set; }
        public virtual DbSet<STATEMENT_DETAILS_ADD> STATEMENT_DETAILS_ADD { get; set; }
        public virtual DbSet<STATEMENT_DETAILS_ARCHIVE> STATEMENT_DETAILS_ARCHIVE { get; set; }
        public virtual DbSet<STATEMENT_HEADER> STATEMENT_HEADER { get; set; }
        public virtual DbSet<STATEMENT_HEADER_ARCHIVE> STATEMENT_HEADER_ARCHIVE { get; set; }
        public virtual DbSet<BROKER_GROUP> BROKER_GROUP { get; set; }
        public virtual DbSet<BROKER_CLIENT> BROKER_CLIENT { get; set; }
        public virtual DbSet<COMMISSION_RESULT_NAME0> COMMISSION_RESULT_NAME0 { get; set; }
        public virtual DbSet<COMMISSION_RESULT_NAME1> COMMISSION_RESULT_NAME1 { get; set; }
        public virtual DbSet<COMMISSION_RESULT_NAME2> COMMISSION_RESULT_NAME2 { get; set; }
        public virtual DbSet<COMMISSION_RESULT_NAME3> COMMISSION_RESULT_NAME3 { get; set; }
        public virtual DbSet<COMMISSION_RESULT_NAME4> COMMISSION_RESULT_NAME4 { get; set; }
        public virtual DbSet<COMMISSION_RESULT_NAME5> COMMISSION_RESULT_NAME5 { get; set; }
        public virtual DbSet<COMMISSION_RESULT_NAME6> COMMISSION_RESULT_NAME6 { get; set; }
        public virtual DbSet<DASH_BOARD> DASH_BOARD { get; set; }
        public virtual DbSet<VW_STATEMENT_HEADER> VW_STATEMENT_HEADER { get; set; }
        public virtual DbSet<vw_statement_details_archive_and_paid> vw_statement_details_archive_and_paid { get; set; }
        public virtual DbSet<vw_statement_design_view> vw_statement_design_view { get; set; }
    
        public virtual int db_log_error(string err_no, string err_source, string err_msg, string sqlstate)
        {
            var err_noParameter = err_no != null ?
                new ObjectParameter("err_no", err_no) :
                new ObjectParameter("err_no", typeof(string));
    
            var err_sourceParameter = err_source != null ?
                new ObjectParameter("err_source", err_source) :
                new ObjectParameter("err_source", typeof(string));
    
            var err_msgParameter = err_msg != null ?
                new ObjectParameter("err_msg", err_msg) :
                new ObjectParameter("err_msg", typeof(string));
    
            var sqlstateParameter = sqlstate != null ?
                new ObjectParameter("sqlstate", sqlstate) :
                new ObjectParameter("sqlstate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("db_log_error", err_noParameter, err_sourceParameter, err_msgParameter, sqlstateParameter);
        }
    
        public virtual int db_log_message(string msg_source, string msg, string log_level, Nullable<int> recsaffected, Nullable<int> print)
        {
            var msg_sourceParameter = msg_source != null ?
                new ObjectParameter("msg_source", msg_source) :
                new ObjectParameter("msg_source", typeof(string));
    
            var msgParameter = msg != null ?
                new ObjectParameter("msg", msg) :
                new ObjectParameter("msg", typeof(string));
    
            var log_levelParameter = log_level != null ?
                new ObjectParameter("log_level", log_level) :
                new ObjectParameter("log_level", typeof(string));
    
            var recsaffectedParameter = recsaffected.HasValue ?
                new ObjectParameter("recsaffected", recsaffected) :
                new ObjectParameter("recsaffected", typeof(int));
    
            var printParameter = print.HasValue ?
                new ObjectParameter("print", print) :
                new ObjectParameter("print", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("db_log_message", msg_sourceParameter, msgParameter, log_levelParameter, recsaffectedParameter, printParameter);
        }
    
        public virtual int db_throw_error(string err_no, string err_source, string err_msg)
        {
            var err_noParameter = err_no != null ?
                new ObjectParameter("err_no", err_no) :
                new ObjectParameter("err_no", typeof(string));
    
            var err_sourceParameter = err_source != null ?
                new ObjectParameter("err_source", err_source) :
                new ObjectParameter("err_source", typeof(string));
    
            var err_msgParameter = err_msg != null ?
                new ObjectParameter("err_msg", err_msg) :
                new ObjectParameter("err_msg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("db_throw_error", err_noParameter, err_sourceParameter, err_msgParameter);
        }
    
        public virtual int GET_TOTAL(Nullable<int> bid)
        {
            var bidParameter = bid.HasValue ?
                new ObjectParameter("bid", bid) :
                new ObjectParameter("bid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_TOTAL", bidParameter);
        }
    
        public virtual int SP_BU_PREVIOUSTABLE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_BU_PREVIOUSTABLE");
        }
    
        public virtual int SP_CALC_STATEMENT_LINE_PAYMENT_STATUS(string month, Nullable<int> year)
        {
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CALC_STATEMENT_LINE_PAYMENT_STATUS", monthParameter, yearParameter);
        }
    
        public virtual int SP_CALC_STATEMENT_LINE_PAYMENT_STATUS_FOR_HEADER(Nullable<int> header_id, Nullable<int> broker_id, string client_name)
        {
            var header_idParameter = header_id.HasValue ?
                new ObjectParameter("header_id", header_id) :
                new ObjectParameter("header_id", typeof(int));
    
            var broker_idParameter = broker_id.HasValue ?
                new ObjectParameter("broker_id", broker_id) :
                new ObjectParameter("broker_id", typeof(int));
    
            var client_nameParameter = client_name != null ?
                new ObjectParameter("client_name", client_name) :
                new ObjectParameter("client_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CALC_STATEMENT_LINE_PAYMENT_STATUS_FOR_HEADER", header_idParameter, broker_idParameter, client_nameParameter);
        }
    
        public virtual int SP_FILE_IMPORT_SSIS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_FILE_IMPORT_SSIS");
        }
    
        public virtual int SP_IMPORT_FILE_SENT_SSIS(string month, Nullable<int> year)
        {
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IMPORT_FILE_SENT_SSIS", monthParameter, yearParameter);
        }
    
        public virtual int SP_STATEMENT_DETAIL_UPDATE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_STATEMENT_DETAIL_UPDATE");
        }
    
        public virtual int SP_UPLODADFILE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPLODADFILE");
        }
    
        public virtual ObjectResult<Nullable<int>> SP_INSERT_SENT_INVOICE(string iNVOICE_NUM, Nullable<System.DateTime> dATE_PAID, Nullable<decimal> oPEN_BALANCE, Nullable<decimal> cOMMISSION_PAID, Nullable<int> bROKER_ID, string month, Nullable<int> year)
        {
            var iNVOICE_NUMParameter = iNVOICE_NUM != null ?
                new ObjectParameter("INVOICE_NUM", iNVOICE_NUM) :
                new ObjectParameter("INVOICE_NUM", typeof(string));
    
            var dATE_PAIDParameter = dATE_PAID.HasValue ?
                new ObjectParameter("DATE_PAID", dATE_PAID) :
                new ObjectParameter("DATE_PAID", typeof(System.DateTime));
    
            var oPEN_BALANCEParameter = oPEN_BALANCE.HasValue ?
                new ObjectParameter("OPEN_BALANCE", oPEN_BALANCE) :
                new ObjectParameter("OPEN_BALANCE", typeof(decimal));
    
            var cOMMISSION_PAIDParameter = cOMMISSION_PAID.HasValue ?
                new ObjectParameter("COMMISSION_PAID", cOMMISSION_PAID) :
                new ObjectParameter("COMMISSION_PAID", typeof(decimal));
    
            var bROKER_IDParameter = bROKER_ID.HasValue ?
                new ObjectParameter("BROKER_ID", bROKER_ID) :
                new ObjectParameter("BROKER_ID", typeof(int));
    
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_INSERT_SENT_INVOICE", iNVOICE_NUMParameter, dATE_PAIDParameter, oPEN_BALANCEParameter, cOMMISSION_PAIDParameter, bROKER_IDParameter, monthParameter, yearParameter);
        }
    
        public virtual int SP_UPDATE_STATEMENT_PAYMENT_STATUS(string month, Nullable<int> year)
        {
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_STATEMENT_PAYMENT_STATUS", monthParameter, yearParameter);
        }
    
        public virtual int sp_update_header_totals()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_header_totals");
        }
    
        public virtual ObjectResult<string> UTIL_TRUNCATE_TRN_TABLES(string param)
        {
            var paramParameter = param != null ?
                new ObjectParameter("param", param) :
                new ObjectParameter("param", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UTIL_TRUNCATE_TRN_TABLES", paramParameter);
        }
    }
}
